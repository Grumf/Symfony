{# commentaire en twig #}

{# surcharge de la vue base.html.twig #}
{% extends 'base.html.twig' %}

{# Déclaration d'une variable #}
{% set bonjour = 'hello' %}

{# remplace de bloc body de base.html.twig #}
{% block body %}
    
    {# J'affiche le contenu d'une variable #}
    <p>{{ bonjour }}</p>
    
    {# Pour tester la variable #}
    {{ dump(bonjour) }}
    
    {% if bonjour == 'hello' %}
        <p>La variable bonjour vaut 'hello'</p>
    {% endif %}
    
    {% set myint = 3 %}
    
    {% if myint > 2 %}
        <p>myint est supérieur à 2</p>
    {% elseif int < 1 %}
        <p>myint est inférieur à 1</p>
    {% endif %}
    
    {# equivalent d'isset() en PHP #}
    {% if myint is defined %}
        <p>myint existe</p> 
    {% endif %}
    
    {# equivalent d'is_null() en PHP #}
    {% if myint is null %}
        <p>myint vaut null</p> 
    {% endif %}
    
    {# equivalent d'empty() en PHP #}
    {% if myint is empty %}
        <p>myint est vide</p> 
    {% endif %}
    
    {# and = && #}
    {% if myint > 2 and bonjour == 'hello' %}
        <p>Les 2 conditions est remplie</p>
    {% endif %}
        
    {# or = || #}
    {% if myint > 2 or bonjour == 'hello' %}
        <p>Une des 2 conditions est remplie</p>
    {% endif %}
    
    {# Déclaration d'un tableau #}
    {% set pronoms = ['je', 'tu', 'il'] %}
    
    {# foreach( $pronoms as $pronom ) #}
    {% for pronom in pronoms %}
        {{ pronom }}<br>
    {% endfor %}
    
    {# foreach($pronom as $indice => $pronom) #}
    {% for indice, pronom in pronoms %}
        {{ indice }} : {{ pronom }}<br>
    {% endfor %}
    
    {# equivalent de in_array() en PHP #}
    {% if myint in [1,2,3] %}
        <p>myint vaut 1, 2 ou 3</p>
    {% endif %}
    
    {# 2 synthaxe pour acceder à l'élément d'un tableau par sa clé #}
    {{ dump(pronoms[0]) }}
    {{ dump(pronoms.0) }}
    
    {# On peut mettre un else dans un for #}
    {% for test in [] %}
        {{ test }}
    {% else %}
        <p>Le tableau est vide</p>
    {% endfor %}
    
    {% set users = ['Julien', 'Thomas', 'Marie-Pierre'] %}
    {% for user in users %}
        {# sur quel tour de boucle on est, index 1 #}
        {{ dump(loop.index) }}
        
        {# sur quel tour de boucle on est, index 0 #}
        {{ dump(loop.index0) }}
        
        {% if loop.first %}
            <p>Premier tour de boucle</p>
        {% endif %}
        
        {% if loop.last %}
            <p>Dernier tour de boucle</p>
        {% endif %}
        
        {# even = pair / odd = impair #}
        {% if loop.index is odd %}
            <p>Tour de boucle impair</p>
        {% endif %}
        
        {{ user }}
    {% endfor %}
    
    {% set bouh = 'Bouuuh' %}
    
    {# concatenation #}
    <p>{{ bouh ~ '!' }}</p>
        
    {# application du filtre upper (strtoupper() en PHP) #}
    <p>{{ bouh|upper }}</p>
        
    {# Filtre default appliqué si la valeur est vide #}
    <p>{{ emptyVar|default('empty var est vide') }}</p>
        
    {% set html =  '<p>Du HTML</p>' %}
    
    {# Par défaut, le HTML est échappé #}
    {{ html }}
    
    {# Le filtre raw pour ne pas échapper #}
    {{ html|raw }}
    
    <p>{{ now|date('d/m/Y') }}</p>
    
    {# inclusion de fichier #}
    {# {% include 'intro/included.html.twig' %} #}
    
    {# only = ne passe pas les variables au fichier inclu #}
    {# {% include 'intro/included.html.twig' only %} #}
    
    {# with passe un tableau de variables en plus de celles de la page #}
    {% include 'intro/included.html.twig' with {foo: 'nouvelle variable'} %}
    
    {% include 'intro/included.html.twig' with {bouh : bouh, foo: 'nouvelle variable'} only %}
    
    
    
{% endblock %}
